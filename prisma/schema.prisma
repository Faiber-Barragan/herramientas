// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  email       String        @unique
  password    String
  phoneNumber Int
  address     String
  score       Int?
  actives     Active[]      // Relación uno a muchos con Active
  reviews     Review[]      // Relación uno a muchos con Review
  reservations Reservation[] // Relación uno a muchos con Reservation
}

model Active {
  id           Int       @id @default(autoincrement())
  name         String
  description  String
  price        Decimal
  category     String
  score        Int
  status       Boolean
  userId       Int       // Clave foránea para la relación con User
  user         User      @relation(fields: [userId], references: [id])
  transactions Transaction[] // Relación uno a muchos con Transaction
  reservations Reservation[] // Relación uno a muchos con Reservation
  reviews      Review[]  // Relación uno a muchos con Review
}

model Review {
  id          Int       @id @default(autoincrement())
  description String
  stars       Int
  activeId    Int       // Clave foránea para la relación con Active
  active      Active    @relation(fields: [activeId], references: [id])
  userId      Int       // Clave foránea para la relación con User
  user        User      @relation(fields: [userId], references: [id])
}

model Transaction {
  id            Int      @id @default(autoincrement())
  date          DateTime
  topUpValue    Decimal
  paymentMethod String
  totalPayable  Decimal
  activeId      Int      // Clave foránea para la relación con Active
  active        Active   @relation(fields: [activeId], references: [id])
}

model Reservation {
  id        Int      @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  address   String
  city      String
  activeId  Int      // Clave foránea para la relación con Active
  active    Active   @relation(fields: [activeId], references: [id])
  userId    Int      // Clave foránea para la relación con User
  user      User     @relation(fields: [userId], references: [id])
}
